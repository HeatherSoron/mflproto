{"version":3,"sources":["views.js","models.js","controllers.js","app.js"],"names":["View","constructor","baseElementSelector","root","document","querySelector","elements","listeners","exists","on","event","callback","push","trigger","data","forEach","FormView","overrideSubmit","addEventListener","e","preventDefault","getFormData","inputs","Array","from","querySelectorAll","el","name","id","value","LoginFormView","AlertView","hide","parentElement","removeChild","show","type","msg","markup","insertAdjacentHTML","window","setTimeout","onerror","err","DataParserView","get","input_name","JSON","parse","TrainingView","prompt","input","answer_feedback","student_answer","normalize","str","toLowerCase","trim","replace","isCorrect","answer","innerText","disabled","alert","undefined","finish","Model","getLocal","map","single","AuthModel","login","email","password","res","fetch","method","body","stringify","headers","status","location","assign","response","message","SentenceModel","Controller","LoginController","loginForm","console","log","TrainController","desiredReaskLength","sentences","finishedSentences","trainTask","initialCount","length","rightCount","wrongCount","sentenceObject","shift","insertionIndex","Math","min","splice","doNextSentence","sentenceData","sentence","translation","loginController","trainController"],"mappings":"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","file":"bundle.js","sourceRoot":"","sourcesContent":["class View {\n\tconstructor(baseElementSelector) {\n\t\tthis.root = document.querySelector(baseElementSelector);\n\t\tthis.elements = {};\n\t\tthis.listeners = {};\n\t}\n\n\tget exists() {\n\t\treturn !!this.root;\n\t}\n\n\ton(event, callback) {\n\t\tif (!this.listeners[event]) {\n\t\t\tthis.listeners[event] = [];\n\t\t}\n\n\t\tthis.listeners[event].push(callback);\n\t}\n\n\ttrigger(event, data) {\n\t\tconst listeners = this.listeners[event];\n\t\tif (listeners) {\n\t\t\tlisteners.forEach(callback => callback(data));\n\t\t}\n\t}\n}\n\n\n// FORMS\n\nclass FormView extends View {\n\toverrideSubmit(callback) {\n\t\tthis.root.addEventListener('submit', (e) => {\n\t\t\te.preventDefault();\n\n\t\t\tcallback(this.getFormData());\n\t\t})\n\t}\n\n\tgetFormData() {\n\t\tconst inputs = Array.from(this.root.querySelectorAll('input'));\n\t\tconst data = {};\n\n\t\tinputs.forEach(el => {\n\t\t\t// TODO suggestion from Heather: switch this to always use `name`. I'll have to check with Tom first, though (because it breaks existing code)\n\t\t\tconst name = el.name ? el.name : el.id;\n\n\t\t\t// TODO design question: should we handle situations where there's multiple inputs with the same name? (turn it into an array? ignore them?)\n\t\t\tdata[name] = el.value;\n\t\t})\n\n\t\treturn data;\n\t}\n}\n\nexport class LoginFormView extends FormView {\n\tconstructor() {\n\t\tsuper('.form--login')\n\t}\n}\n\n\n// GENERIC DOM MANIP\n\nexport class AlertView extends View {\n\tstatic hide() {\n\t\tconst el = document.querySelector('.alert');\n\t\tif (el) el.parentElement.removeChild(el);\n\t}\n\n\t// type is 'success' or 'error'\n\tstatic show(type, msg) {\n\t\tthis.hide();\n\t\tconst markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n\t\tdocument.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n\t\twindow.setTimeout(() => { this.hide() }, 3000);\n\t}\n}\n\nwindow.onerror = (err) => AlertView.show('error', err)\n\nexport class DataParserView extends View {\n\tstatic get(input_name) {\n\t\treturn JSON.parse(document.querySelector(`.js-value[name=\"${input_name}\"]`).value)\n\t}\n}\n\n\n// SPECIFIC PAGES\n\nexport class TrainingView extends FormView {\n\tconstructor() {\n\t\tsuper('form.card');\n\n\t\tthis.elements.prompt = this.root.querySelector('.card-title');\n\t\tthis.elements.input = this.root.querySelector('[name=student_answer]');\n\t\tthis.elements.answer_feedback = this.root.querySelector('.answer-feedback');\n\n\t\tthis.overrideSubmit(({student_answer}) => {\n\t\t\tfunction normalize(str) {\n\t\t\t\treturn str.toLowerCase().trim().replace(/\\s+/g, ' ')\n\t\t\t}\n\t\t\t// TODO DESIGN QUESTION: where should isCorrect be calculated? what code owns that logic?\n\t\t\tconst isCorrect = normalize(student_answer) == normalize(this.answer)\n\n\t\t\tthis.elements.answer_feedback.innerText = this.answer;\n\n\t\t\tthis.elements.input.disabled = 'disabled';\n\n\t\t\ttry {\n\t\t\t\tthis.trigger('answer', {student_answer, isCorrect});\n\t\t\t} catch(err) {\n\t\t\t\talert(err);\n\t\t\t} finally {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.elements.input.disabled = undefined;\n\t\t\t\t\tthis.elements.input.value = '';\n\t\t\t\t\tthis.trigger('next');\n\t\t\t\t}, 1000)\n\t\t\t}\n\t\t})\n\t}\n\n\tfinish() {\n\t\tthis.prompt = 'done';\n\t\tthis.elements.input.disabled = 'disabled';\n\t}\n\n\tget prompt() {\n\t\treturn this.elements.prompt.innerText;\n\t}\n\n\tset prompt(value) {\n\t\treturn this.elements.prompt.innerText = value;\n\t}\n}\n","import { AlertView, DataParserView } from './views.js'\n\n// parent class for models. includes some utility methods, and such\n// \n// if we wanted to get fancy, we might consider picking up the mongoose model definitions, and making use of that somehow.\n// but, that seems like it might take more effort than it's worth, at least until we start needing client-side validation\nclass Model {\n\tconstructor(data) {\n\t\tthis.data = data;\n\t}\n\n\t// returns an array of instantiated objects, based on JSON embedded in a specific DOM element\n\tstatic getLocal(name) {\n\t\t// this is *maybe* not as theoretically clean to have a Model call into a View, but since we're storing global data in certain DOM elements, it works well in practice\n\t\t\n\t\tvar data = DataParserView.get(name)\n\t\tif (!(data instanceof Array)) {\n\t\t\tdata = [data];\n\t\t}\n\t\treturn data.map(single => new this(single));\n\t}\n}\n\nexport class AuthModel extends Model {\n\tstatic async login(email, password) {\n\t\ttry {\n\t\t\tconst res = await fetch('api/v1/users/login', {\n\t\t\t\tmethod:\"POST\",\n\t\t\t\tbody:JSON.stringify({email, password}),\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (res.status == 200) {\n\t\t\t\tAlertView.show('success', 'Logged in successfully!');\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tlocation.assign('/');\n\t\t\t\t}, 1500);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t// TODO double-check the Fetch equivalent to Axios's `err.response.data.message`\n\t\t\tAlertView.show('error', err.response.data.message)\n\t\t}\n\t}\n\n}\n\nexport class SentenceModel extends Model {\n\t\n}\n","import { LoginFormView, TrainingView } from './views.js';\nimport { AuthModel, SentenceModel } from './models.js';\n\n\n// parent class for controllers. Not much needs to be in here, I don't think, so leave it empty.\nclass Controller {\n}\n\nexport class LoginController extends Controller {\n\tconstructor() {\n\t\tsuper()\n\t\tconst loginForm = new LoginFormView();\n\t\t// DELEGATION\n\t\t//Login\n\t\tif (loginForm.exists) {\n\t\t\tconsole.log('hello from index.js');\n\t\t\tloginForm.overrideSubmit(({email, password}) => {\n\t\t\t\tAuthModel.login(email, password);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class TrainController extends Controller {\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst desiredReaskLength = 3;\n\n\t\tconst sentences = SentenceModel.getLocal('sentences');\n\t\tconst finishedSentences = [];\n\n\t\tconst trainTask = new TrainingView();\n\n\t\tconsole.log(sentences);\n\n\t\tconst initialCount = sentences.length;\n\t\tvar rightCount = 0;\n\t\tvar wrongCount = 0;\n\n\t\t// TODO DESIGN QUESTION:\n\t\t//  should we calculate isCorrect inside the view? That would break separation of concerns, but would involve a smaller amount of back-and-forth data calls\n\t\t//  but, on the flip side, the controller needing to know exactly what to update in the view is *also* a bit of a conceptual leak...\n\t\ttrainTask.on('answer', ({student_answer, isCorrect}) => {\n\t\t\tconst sentenceObject = sentences.shift();\n\t\t\tfinishedSentences.push({sentenceObject, isCorrect});\n\n\t\t\tif (isCorrect) {\n\t\t\t\trightCount++;\n\t\t\t} else {\n\t\t\t\twrongCount++;\n\t\t\t\tconst insertionIndex = Math.min(sentences.length, desiredReaskLength);\n\n\t\t\t\tsentences.splice(insertionIndex, 0, sentenceObject);\n\t\t\t}\n\t\t});\n\n\t\ttrainTask.on('next', doNextSentence);\n\n\t\tfunction doNextSentence() {\n\t\t\tif (!sentences[0]) {\n\t\t\t\ttrainTask.finish();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst sentenceData = sentences[0].data;\n\n\t\t\ttrainTask.prompt = sentenceData.sentence;\n\t\t\ttrainTask.answer = sentenceData.translation;\n\t\t}\n\n\t\tdoNextSentence();\n\t}\n}\n","import { LoginController, TrainController } from './controllers.js';\n\n// TODO decide if this file needs to be any fancier?\n\nconst loginController = new LoginController();\nconst trainController = new TrainController();\n"]}